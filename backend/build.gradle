buildscript {
    dependencies {
        classpath 'org.postgresql:postgresql:42.2.5'
    }
}

plugins {
  id 'org.springframework.boot' version '2.1.3.RELEASE'
  id 'org.jetbrains.kotlin.jvm' version '1.3.21'
  id 'org.jetbrains.kotlin.plugin.spring' version '1.3.21'
  id 'org.jetbrains.kotlin.kapt' version '1.3.21'
  id 'org.jlleitschuh.gradle.ktlint' version '7.1.0'
  id 'org.jlleitschuh.gradle.ktlint-idea' version '7.1.0'
  id 'org.flywaydb.flyway' version '5.2.4'
  id 'idea'
}

apply plugin: 'io.spring.dependency-management'

group = 'net.watiko'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
  mavenCentral()
  jcenter()
}

def arrow_version = '0.8.2'
def doma_version = '2.24.0'

dependencies {
  kapt "org.seasar.doma:doma:$doma_version"
  implementation "org.seasar.doma:doma:$doma_version"

  implementation "io.arrow-kt:arrow-core:$arrow_version"
  implementation "io.arrow-kt:arrow-syntax:$arrow_version"
  implementation "io.arrow-kt:arrow-data:$arrow_version"

  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-webflux'
  implementation 'org.springframework.boot:spring-boot-starter-logging'
  implementation 'org.springframework.boot:spring-boot-starter-jdbc'
  implementation 'org.springframework.boot:spring-boot-devtools'
  implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
  implementation 'com.google.firebase:firebase-admin:6.7.0'
  implementation 'org.flywaydb:flyway-core'
  implementation 'org.jetbrains.kotlin:kotlin-reflect'
  implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
  implementation 'am.ik.yavi:yavi:0.0.23'
  implementation 'org.postgresql:postgresql'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'io.projectreactor:reactor-test'
}

idea {
  module {
//    inheritOutputDirs = true
    // gradle 経由で bootRun した時に IDEA で編集しても更新するため
    outputDir compileKotlin.destinationDir
    testOutputDir compileTestKotlin.destinationDir
  }
}

def postgresConf = [
  host: System.env.POSTGRES_HOST ?: 'localhost',
  port: System.env.POSTGRES_PORT ?: '5432',
  username: System.env.POSTGRES_USER ?: 'monorepo',
  password: System.env.POSTGRES_PASSWORD ?: 'postgres',
]

flyway {
  url = "jdbc:postgresql://${postgresConf.host}:${postgresConf.port}/monorepo"
  user = postgresConf.username
  password = postgresConf.password
}

compileKotlin {
  kotlinOptions {
    freeCompilerArgs = ['-Xjsr305=strict']
    jvmTarget = '1.8'
  }
}

compileTestKotlin {
  kotlinOptions {
    freeCompilerArgs = ['-Xjsr305=strict']
    jvmTarget = '1.8'
  }
}
